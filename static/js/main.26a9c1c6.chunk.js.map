{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerInterval","this","window","setInterval","setState","console","log","toLocaleTimeString","prevPrors","clockName","props","clearInterval","timeString","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","nameId","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,cAAgB,EALlB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,cAAgBE,OAAOC,aAAY,WACtC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAChBI,OAAOG,QAAQC,IAAIR,EAAKS,wBACvB,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,YAAcR,KAAKS,MAAMD,WACrCP,OAAOG,QAAQC,IAAf,uBAAmCE,EAAUC,UAA7C,eAA6DR,KAAKS,MAAMD,cAlB9E,kCAsBE,WACEE,cAAcV,KAAKD,iBAvBvB,oBA0BE,WACE,IACMY,EADWX,KAAKJ,MAAdC,KACgBS,qBAExB,OACE,sBAAKM,UAAU,QAAf,UACE,iCAASZ,KAAKS,MAAMD,YACnB,YACAG,SAlCT,GAA2BE,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAyB,CACvBY,UAAWM,IACXO,UAAU,GAHd,EAMEC,OAAS,EANX,uDAQE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEkB,UAAU,OAE5BE,SAASC,iBAAiB,eAAe,WACvC,EAAKrB,SAAS,CAAEkB,UAAU,OAG5BrB,KAAKsB,OAASrB,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEK,UAAWM,QAC1B,QAlBP,kCAqBE,WACEJ,cAAcV,KAAKsB,UAtBvB,oBAyBE,WACE,MAAgCtB,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUb,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,yBACCS,GAAY,cAAC,EAAD,CAAOb,UAAWA,WA/BvC,GAAyBK,aCZzBY,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.26a9c1c6.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  clockName: string\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerInterval = 0;\n\n  componentDidMount() {\n    this.timerInterval = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n      window.console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevPrors: Props) {\n    if (prevPrors.clockName !== this.props.clockName) {\n      window.console.log(`Renamed from ${prevPrors.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerInterval);\n  }\n\n  render() {\n    const { date } = this.state;\n    const timeString = date.toLocaleTimeString();\n\n    return (\n      <div className=\"clock\">\n        <strong>{this.props.clockName}</strong>\n        {' time is '}\n        {timeString}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  nameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    this.nameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.nameId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"clock\">React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}